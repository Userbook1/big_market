24-08-07.20:17:14.118 [main            ] INFO  RaffleStrategyTest     - Starting RaffleStrategyTest using Java 17.0.11 on 192.168.10.103 with PID 20797 (started by caicai in /Users/caicai/Documents/idea 项目/big-market02/big-market02-app)
24-08-07.20:17:14.122 [main            ] INFO  RaffleStrategyTest     - The following 1 profile is active: "dev"
24-08-07.20:17:16.735 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-08-07.20:17:16.747 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-08-07.20:17:16.891 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 76 ms. Found 0 Redis repository interfaces.
24-08-07.20:17:19.686 [main            ] INFO  Version                - Redisson 3.26.0
24-08-07.20:17:19.831 [main            ] WARN  DnsServerAddressStreamProviders - Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'
24-08-07.20:17:20.401 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.20:17:20.465 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.20:17:24.183 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-08-07.20:17:24.338 [main            ] INFO  RaffleStrategyTest     - Started RaffleStrategyTest in 11.437 seconds (JVM running for 15.287)
24-08-07.20:17:25.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:17:25.747 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-08-07.20:17:26.946 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-08-07.20:17:27.693 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-08-07.20:17:27.719 [redisson-netty-1-12] ERROR CommandDecoder         - Unable to decode data. channel: [id: 0xb1100587, L:/127.0.0.1:59034 - R:127.0.0.1/127.0.0.1:6379], reply: ReplayingDecoderByteBuf(ridx=101, widx=101), command: (GET), promise: java.util.concurrent.CompletableFuture@620d1fc8[Not completed, 1 dependents], params: [big_market_strategy_key_100001]
com.esotericsoftware.kryo.KryoException: Unable to find class: org.example.domain.strategy.entity.StrategyEntity
	at com.esotericsoftware.kryo.util.DefaultClassResolver.readName(DefaultClassResolver.java:182)
	at com.esotericsoftware.kryo.util.DefaultClassResolver.readClass(DefaultClassResolver.java:151)
	at com.esotericsoftware.kryo.Kryo.readClass(Kryo.java:758)
	at com.esotericsoftware.kryo.Kryo.readClassAndObject(Kryo.java:869)
	at org.redisson.codec.Kryo5Codec$4.decode(Kryo5Codec.java:144)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:433)
	at org.redisson.client.handler.CommandDecoder.decodeCommand(CommandDecoder.java:216)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:144)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:120)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:529)
	at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:366)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.ClassNotFoundException: org.example.domain.strategy.entity.StrategyEntity
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:467)
	at com.esotericsoftware.kryo.util.DefaultClassResolver.readName(DefaultClassResolver.java:176)
	... 27 common frames omitted
24-08-07.20:17:27.734 [redisson-netty-1-12] ERROR ErrorsLoggingHandler   - Exception occured. Channel: [id: 0xb1100587, L:/127.0.0.1:59034 - R:127.0.0.1/127.0.0.1:6379]
io.netty.handler.codec.DecoderException: com.esotericsoftware.kryo.KryoException: Unable to find class: org.example.domain.strategy.entity.StrategyEntity
	at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:421)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.esotericsoftware.kryo.KryoException: Unable to find class: org.example.domain.strategy.entity.StrategyEntity
	at com.esotericsoftware.kryo.util.DefaultClassResolver.readName(DefaultClassResolver.java:182)
	at com.esotericsoftware.kryo.util.DefaultClassResolver.readClass(DefaultClassResolver.java:151)
	at com.esotericsoftware.kryo.Kryo.readClass(Kryo.java:758)
	at com.esotericsoftware.kryo.Kryo.readClassAndObject(Kryo.java:869)
	at org.redisson.codec.Kryo5Codec$4.decode(Kryo5Codec.java:144)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:433)
	at org.redisson.client.handler.CommandDecoder.decodeCommand(CommandDecoder.java:216)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:144)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:120)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:529)
	at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:366)
	... 17 common frames omitted
Caused by: java.lang.ClassNotFoundException: org.example.domain.strategy.entity.StrategyEntity
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:467)
	at com.esotericsoftware.kryo.util.DefaultClassResolver.readName(DefaultClassResolver.java:176)
	... 27 common frames omitted
24-08-07.20:17:27.884 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-08-07.20:17:27.902 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-08-07.20:18:10.457 [main            ] INFO  StrategyRepositoryTest - Starting StrategyRepositoryTest using Java 17.0.11 on 192.168.10.103 with PID 20811 (started by caicai in /Users/caicai/Documents/idea 项目/big-market02/big-market02-app)
24-08-07.20:18:10.462 [main            ] INFO  StrategyRepositoryTest - The following 1 profile is active: "dev"
24-08-07.20:18:13.974 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-08-07.20:18:13.983 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-08-07.20:18:14.110 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 69 ms. Found 0 Redis repository interfaces.
24-08-07.20:18:18.780 [main            ] INFO  Version                - Redisson 3.26.0
24-08-07.20:18:18.974 [main            ] WARN  DnsServerAddressStreamProviders - Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'
24-08-07.20:18:19.544 [redisson-netty-1-5] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.20:18:19.600 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.20:18:23.239 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-08-07.20:18:23.420 [main            ] INFO  StrategyRepositoryTest - Started StrategyRepositoryTest in 14.422 seconds (JVM running for 17.77)
24-08-07.20:18:24.529 [redisson-netty-1-8] ERROR CommandDecoder         - Unable to decode data. channel: [id: 0xdbe69928, L:/127.0.0.1:59052 - R:127.0.0.1/127.0.0.1:6379], reply: ReplayingDecoderByteBuf(ridx=8, widx=8), command: (GET), promise: java.util.concurrent.CompletableFuture@12a85108[Not completed, 1 dependents], params: [strategy_award_count_key_300001_102]
com.esotericsoftware.kryo.KryoException: Encountered unregistered class ID: 47
	at com.esotericsoftware.kryo.util.DefaultClassResolver.readClass(DefaultClassResolver.java:159)
	at com.esotericsoftware.kryo.Kryo.readClass(Kryo.java:758)
	at com.esotericsoftware.kryo.Kryo.readClassAndObject(Kryo.java:869)
	at org.redisson.codec.Kryo5Codec$4.decode(Kryo5Codec.java:144)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:433)
	at org.redisson.client.handler.CommandDecoder.decodeCommand(CommandDecoder.java:216)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:144)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:120)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:529)
	at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:366)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)
24-08-07.20:18:24.539 [redisson-netty-1-8] ERROR ErrorsLoggingHandler   - Exception occured. Channel: [id: 0xdbe69928, L:/127.0.0.1:59052 - R:127.0.0.1/127.0.0.1:6379]
io.netty.handler.codec.DecoderException: com.esotericsoftware.kryo.KryoException: Encountered unregistered class ID: 47
	at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:421)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.esotericsoftware.kryo.KryoException: Encountered unregistered class ID: 47
	at com.esotericsoftware.kryo.util.DefaultClassResolver.readClass(DefaultClassResolver.java:159)
	at com.esotericsoftware.kryo.Kryo.readClass(Kryo.java:758)
	at com.esotericsoftware.kryo.Kryo.readClassAndObject(Kryo.java:869)
	at org.redisson.codec.Kryo5Codec$4.decode(Kryo5Codec.java:144)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:433)
	at org.redisson.client.handler.CommandDecoder.decodeCommand(CommandDecoder.java:216)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:144)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:120)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:529)
	at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:366)
	... 17 common frames omitted
24-08-07.20:18:24.633 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-08-07.20:18:25.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:18:25.266 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-08-07.20:18:26.026 [main            ] INFO  StrategyRepositoryTest - 测试结果：{"treeDesc":"规则树","treeId":"tree_lock","treeName":"规则树","treeNodeMap":{},"treeRootRuleNode":"rule_lock"}
24-08-07.20:18:30.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:18:30.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100001 awardId:102
24-08-07.20:18:35.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:18:40.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:18:45.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:18:50.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:18:54.997 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:19:00.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:19:05.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:19:10.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:19:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:19:20.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:19:25.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:19:30.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:19:35.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:19:40.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:19:45.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:19:50.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:19:55.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:20:00.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:20:05.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:20:10.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:20:15.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:20:20.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:20:25.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:20:30.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:20:35.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:20:40.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:20:45.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:20:50.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:20:55.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:21:00.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:21:05.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:21:10.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:21:15.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:21:20.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:21:25.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:21:30.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:21:35.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:21:40.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:21:45.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:21:50.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:21:55.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:22:00.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:22:05.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:22:10.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:22:15.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:22:20.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:22:25.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:22:30.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:22:35.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:22:40.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:22:45.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:22:50.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:22:55.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:23:00.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:23:05.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:23:10.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:23:15.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:23:20.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:23:25.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:23:30.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:23:35.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:23:40.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:23:45.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:23:50.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:23:55.021 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:24:00.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:24:05.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:24:10.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:24:15.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:24:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:24:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:24:30.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:24:35.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:24:35.177 [main            ] INFO  RaffleStrategyTest     - Starting RaffleStrategyTest using Java 17.0.11 on 192.168.10.103 with PID 20864 (started by caicai in /Users/caicai/Documents/idea 项目/big-market02/big-market02-app)
24-08-07.20:24:35.180 [main            ] INFO  RaffleStrategyTest     - The following 1 profile is active: "dev"
24-08-07.20:24:37.366 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-08-07.20:24:37.372 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-08-07.20:24:37.439 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 36 ms. Found 0 Redis repository interfaces.
24-08-07.20:24:40.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:24:42.128 [main            ] INFO  Version                - Redisson 3.26.0
24-08-07.20:24:42.264 [main            ] WARN  DnsServerAddressStreamProviders - Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'
24-08-07.20:24:42.915 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.20:24:43.032 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.20:24:45.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:24:48.006 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-08-07.20:24:48.122 [main            ] INFO  RaffleStrategyTest     - Started RaffleStrategyTest in 14.173 seconds (JVM running for 18.583)
24-08-07.20:24:49.613 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-08-07.20:24:50.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:24:50.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:24:50.309 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-08-07.20:24:50.387 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-08-07.20:24:50.401 [redisson-netty-1-12] ERROR CommandDecoder         - Unable to decode data. channel: [id: 0x65985b8d, L:/127.0.0.1:59081 - R:127.0.0.1/127.0.0.1:6379], reply: ReplayingDecoderByteBuf(ridx=101, widx=101), command: (GET), promise: java.util.concurrent.CompletableFuture@4d6f20ef[Not completed, 1 dependents], params: [big_market_strategy_key_100001]
com.esotericsoftware.kryo.KryoException: Unable to find class: org.example.domain.strategy.entity.StrategyEntity
	at com.esotericsoftware.kryo.util.DefaultClassResolver.readName(DefaultClassResolver.java:182)
	at com.esotericsoftware.kryo.util.DefaultClassResolver.readClass(DefaultClassResolver.java:151)
	at com.esotericsoftware.kryo.Kryo.readClass(Kryo.java:758)
	at com.esotericsoftware.kryo.Kryo.readClassAndObject(Kryo.java:869)
	at org.redisson.codec.Kryo5Codec$4.decode(Kryo5Codec.java:144)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:433)
	at org.redisson.client.handler.CommandDecoder.decodeCommand(CommandDecoder.java:216)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:144)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:120)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:529)
	at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:366)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.ClassNotFoundException: org.example.domain.strategy.entity.StrategyEntity
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:467)
	at com.esotericsoftware.kryo.util.DefaultClassResolver.readName(DefaultClassResolver.java:176)
	... 27 common frames omitted
24-08-07.20:24:50.412 [redisson-netty-1-12] ERROR ErrorsLoggingHandler   - Exception occured. Channel: [id: 0x65985b8d, L:/127.0.0.1:59081 - R:127.0.0.1/127.0.0.1:6379]
io.netty.handler.codec.DecoderException: com.esotericsoftware.kryo.KryoException: Unable to find class: org.example.domain.strategy.entity.StrategyEntity
	at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:421)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.esotericsoftware.kryo.KryoException: Unable to find class: org.example.domain.strategy.entity.StrategyEntity
	at com.esotericsoftware.kryo.util.DefaultClassResolver.readName(DefaultClassResolver.java:182)
	at com.esotericsoftware.kryo.util.DefaultClassResolver.readClass(DefaultClassResolver.java:151)
	at com.esotericsoftware.kryo.Kryo.readClass(Kryo.java:758)
	at com.esotericsoftware.kryo.Kryo.readClassAndObject(Kryo.java:869)
	at org.redisson.codec.Kryo5Codec$4.decode(Kryo5Codec.java:144)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:433)
	at org.redisson.client.handler.CommandDecoder.decodeCommand(CommandDecoder.java:216)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:144)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:120)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:529)
	at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:366)
	... 17 common frames omitted
Caused by: java.lang.ClassNotFoundException: org.example.domain.strategy.entity.StrategyEntity
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:467)
	at com.esotericsoftware.kryo.util.DefaultClassResolver.readName(DefaultClassResolver.java:176)
	... 27 common frames omitted
24-08-07.20:24:50.605 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-08-07.20:24:50.736 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-08-07.20:24:51.011 [main            ] INFO  RaffleStrategyTest     - 测试结果：null
24-08-07.20:24:51.060 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-08-07.20:24:51.065 [main            ] INFO  BackListLogicChain     - 抽奖责任链-黑名单开始 userId: xiaofuge strategyId: 100006 ruleModel: rule_blacklist
24-08-07.20:24:51.112 [main            ] INFO  BackListLogicChain     - 抽奖责任链-黑名单放行 userId: xiaofuge strategyId: 100006 ruleModel: rule_blacklist
24-08-07.20:24:51.113 [main            ] INFO  RuleWeightLogicChain   - 抽奖责任链-权重开始 userId: xiaofuge strategyId: 100006 ruleModel: rule_weight
24-08-07.20:24:51.123 [main            ] INFO  RuleWeightLogicChain   - 抽奖责任链-权重接管 userId: xiaofuge strategyId: 100006 ruleModel: rule_weight awardId: 105
24-08-07.20:24:51.125 [main            ] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xiaofuge 100006 105 rule_weight
24-08-07.20:24:51.167 [main            ] INFO  RaffleStrategyTest     - 请求参数：{"strategyId":100006,"userId":"xiaofuge"}
24-08-07.20:24:51.178 [main            ] INFO  RaffleStrategyTest     - 测试结果：{"awardId":105}
24-08-07.20:24:51.185 [main            ] INFO  BackListLogicChain     - 抽奖责任链-黑名单开始 userId: xiaofuge strategyId: 100006 ruleModel: rule_blacklist
24-08-07.20:24:51.196 [main            ] INFO  BackListLogicChain     - 抽奖责任链-黑名单放行 userId: xiaofuge strategyId: 100006 ruleModel: rule_blacklist
24-08-07.20:24:51.197 [main            ] INFO  RuleWeightLogicChain   - 抽奖责任链-权重开始 userId: xiaofuge strategyId: 100006 ruleModel: rule_weight
24-08-07.20:24:51.206 [main            ] INFO  RuleWeightLogicChain   - 抽奖责任链-权重接管 userId: xiaofuge strategyId: 100006 ruleModel: rule_weight awardId: 105
24-08-07.20:24:51.206 [main            ] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xiaofuge 100006 105 rule_weight
24-08-07.20:24:51.206 [main            ] INFO  RaffleStrategyTest     - 请求参数：{"strategyId":100006,"userId":"xiaofuge"}
24-08-07.20:24:51.206 [main            ] INFO  RaffleStrategyTest     - 测试结果：{"awardId":105}
24-08-07.20:24:51.208 [main            ] INFO  BackListLogicChain     - 抽奖责任链-黑名单开始 userId: xiaofuge strategyId: 100006 ruleModel: rule_blacklist
24-08-07.20:24:51.210 [main            ] INFO  BackListLogicChain     - 抽奖责任链-黑名单放行 userId: xiaofuge strategyId: 100006 ruleModel: rule_blacklist
24-08-07.20:24:51.211 [main            ] INFO  RuleWeightLogicChain   - 抽奖责任链-权重开始 userId: xiaofuge strategyId: 100006 ruleModel: rule_weight
24-08-07.20:24:51.217 [main            ] INFO  RuleWeightLogicChain   - 抽奖责任链-权重接管 userId: xiaofuge strategyId: 100006 ruleModel: rule_weight awardId: 104
24-08-07.20:24:51.217 [main            ] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xiaofuge 100006 104 rule_weight
24-08-07.20:24:51.217 [main            ] INFO  RaffleStrategyTest     - 请求参数：{"strategyId":100006,"userId":"xiaofuge"}
24-08-07.20:24:51.217 [main            ] INFO  RaffleStrategyTest     - 测试结果：{"awardId":104}
24-08-07.20:24:55.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:24:55.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:25:00.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:25:00.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:25:05.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:25:05.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:25:10.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:25:10.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:25:15.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:25:15.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:25:20.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:25:20.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:25:25.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:25:25.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:25:30.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:25:30.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:25:33.576 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-08-07.20:25:33.635 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-08-07.20:25:34.997 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:25:35.947 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-08-07.20:25:36.018 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-08-07.20:53:21.258 [main            ] INFO  RaffleStrategyTest     - Starting RaffleStrategyTest using Java 17.0.11 on 192.168.10.103 with PID 21066 (started by caicai in /Users/caicai/Documents/idea 项目/big-market02/big-market02-app)
24-08-07.20:53:21.268 [main            ] INFO  RaffleStrategyTest     - The following 1 profile is active: "dev"
24-08-07.20:53:24.731 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-08-07.20:53:24.738 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-08-07.20:53:24.829 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 55 ms. Found 0 Redis repository interfaces.
24-08-07.20:53:28.446 [main            ] INFO  Version                - Redisson 3.26.0
24-08-07.20:53:28.622 [main            ] WARN  DnsServerAddressStreamProviders - Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'
24-08-07.20:53:29.301 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.20:53:29.357 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.20:53:33.099 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-08-07.20:53:33.241 [main            ] INFO  RaffleStrategyTest     - Started RaffleStrategyTest in 15.257 seconds (JVM running for 22.197)
24-08-07.20:53:34.572 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-08-07.20:53:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:53:35.313 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-08-07.20:53:35.820 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-08-07.20:53:35.839 [main            ] INFO  BackListLogicChain     - 抽奖责任链-黑名单开始 userId: user003 strategyId: 100001 ruleModel: rule_blacklist
24-08-07.20:53:35.899 [main            ] INFO  BackListLogicChain     - 抽奖责任链-黑名单接管 userId: user003 strategyId: 100001 ruleModel: rule_blacklist awardId: 101
24-08-07.20:53:35.901 [main            ] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 user003 100001 101 rule_blacklist
24-08-07.20:53:36.209 [main            ] INFO  RaffleStrategyTest     - 请求参数：{"strategyId":100001,"userId":"user003"}
24-08-07.20:53:36.215 [main            ] INFO  RaffleStrategyTest     - 测试结果：{"awardId":101}
24-08-07.20:53:36.283 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-08-07.20:53:36.298 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-08-07.20:55:02.694 [main            ] INFO  RaffleStrategyTest     - Starting RaffleStrategyTest using Java 17.0.11 on 192.168.10.103 with PID 21107 (started by caicai in /Users/caicai/Documents/idea 项目/big-market02/big-market02-app)
24-08-07.20:55:02.696 [main            ] INFO  RaffleStrategyTest     - The following 1 profile is active: "dev"
24-08-07.20:55:05.468 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-08-07.20:55:05.477 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-08-07.20:55:05.600 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 64 ms. Found 0 Redis repository interfaces.
24-08-07.20:55:08.343 [main            ] INFO  Version                - Redisson 3.26.0
24-08-07.20:55:08.546 [main            ] WARN  DnsServerAddressStreamProviders - Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'
24-08-07.20:55:09.012 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.20:55:09.058 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.20:55:12.803 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-08-07.20:55:12.931 [main            ] INFO  RaffleStrategyTest     - Started RaffleStrategyTest in 11.657 seconds (JVM running for 16.757)
24-08-07.20:55:14.624 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-08-07.20:55:15.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:55:15.899 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-08-07.20:55:16.362 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-08-07.20:55:16.508 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-08-07.20:55:16.545 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-08-07.20:55:35.169 [main            ] INFO  RaffleStrategyTest     - Starting RaffleStrategyTest using Java 17.0.11 on 192.168.10.103 with PID 21120 (started by caicai in /Users/caicai/Documents/idea 项目/big-market02/big-market02-app)
24-08-07.20:55:35.179 [main            ] INFO  RaffleStrategyTest     - The following 1 profile is active: "dev"
24-08-07.20:55:37.899 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-08-07.20:55:37.903 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-08-07.20:55:37.983 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 46 ms. Found 0 Redis repository interfaces.
24-08-07.20:55:40.402 [main            ] INFO  Version                - Redisson 3.26.0
24-08-07.20:55:40.563 [main            ] WARN  DnsServerAddressStreamProviders - Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'
24-08-07.20:55:41.024 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.20:55:41.065 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.20:55:44.259 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-08-07.20:55:44.415 [main            ] INFO  RaffleStrategyTest     - Started RaffleStrategyTest in 10.786 seconds (JVM running for 15.038)
24-08-07.20:55:45.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:55:45.856 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-08-07.20:55:46.486 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-08-07.20:55:46.579 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-08-07.20:55:47.218 [main            ] INFO  RaffleStrategyTest     - 测试结果：null
24-08-07.20:55:47.315 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-08-07.20:55:47.329 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-08-07.20:56:35.244 [main            ] INFO  StrategyRepositoryTest - Starting StrategyRepositoryTest using Java 17.0.11 on 192.168.10.103 with PID 21130 (started by caicai in /Users/caicai/Documents/idea 项目/big-market02/big-market02-app)
24-08-07.20:56:35.247 [main            ] INFO  StrategyRepositoryTest - The following 1 profile is active: "dev"
24-08-07.20:56:38.104 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-08-07.20:56:38.112 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-08-07.20:56:38.183 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 37 ms. Found 0 Redis repository interfaces.
24-08-07.20:56:40.826 [main            ] INFO  Version                - Redisson 3.26.0
24-08-07.20:56:40.990 [main            ] WARN  DnsServerAddressStreamProviders - Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'
24-08-07.20:56:41.427 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.20:56:41.468 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.20:56:44.923 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-08-07.20:56:45.034 [main            ] INFO  StrategyRepositoryTest - Started StrategyRepositoryTest in 11.052 seconds (JVM running for 15.909)
24-08-07.20:56:46.607 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-08-07.20:56:47.278 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-08-07.20:56:48.334 [main            ] INFO  StrategyRepositoryTest - 测试结果：{"treeDesc":"规则树","treeId":"tree_lock","treeName":"规则树","treeNodeMap":{},"treeRootRuleNode":"rule_lock"}
24-08-07.20:56:48.447 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-08-07.20:56:48.462 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-08-07.20:57:23.715 [main            ] INFO  StrategyRepositoryTest - Starting StrategyRepositoryTest using Java 17.0.11 on 192.168.10.103 with PID 21142 (started by caicai in /Users/caicai/Documents/idea 项目/big-market02/big-market02-app)
24-08-07.20:57:23.718 [main            ] INFO  StrategyRepositoryTest - The following 1 profile is active: "dev"
24-08-07.20:57:26.074 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-08-07.20:57:26.079 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-08-07.20:57:26.155 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 35 ms. Found 0 Redis repository interfaces.
24-08-07.20:57:28.965 [main            ] INFO  Version                - Redisson 3.26.0
24-08-07.20:57:29.118 [main            ] WARN  DnsServerAddressStreamProviders - Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'
24-08-07.20:57:29.651 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.20:57:29.709 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.20:57:33.528 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-08-07.20:57:33.664 [main            ] INFO  StrategyRepositoryTest - Started StrategyRepositoryTest in 11.175 seconds (JVM running for 15.078)
24-08-07.20:58:01.566 [main            ] INFO  StrategyRepositoryTest - Starting StrategyRepositoryTest using Java 17.0.11 on 192.168.10.103 with PID 21153 (started by caicai in /Users/caicai/Documents/idea 项目/big-market02/big-market02-app)
24-08-07.20:58:01.576 [main            ] INFO  StrategyRepositoryTest - The following 1 profile is active: "dev"
24-08-07.20:58:04.157 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-08-07.20:58:04.162 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-08-07.20:58:04.234 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 36 ms. Found 0 Redis repository interfaces.
24-08-07.20:58:06.931 [main            ] INFO  Version                - Redisson 3.26.0
24-08-07.20:58:07.126 [main            ] WARN  DnsServerAddressStreamProviders - Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'
24-08-07.20:58:07.639 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.20:58:07.692 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.20:58:12.226 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-08-07.20:58:12.434 [main            ] INFO  StrategyRepositoryTest - Started StrategyRepositoryTest in 12.586 seconds (JVM running for 18.518)
24-08-07.20:58:45.799 [main            ] INFO  StrategyRepositoryTest - Starting StrategyRepositoryTest using Java 17.0.11 on 192.168.10.103 with PID 21166 (started by caicai in /Users/caicai/Documents/idea 项目/big-market02/big-market02-app)
24-08-07.20:58:45.801 [main            ] INFO  StrategyRepositoryTest - The following 1 profile is active: "dev"
24-08-07.20:58:48.313 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-08-07.20:58:48.319 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-08-07.20:58:48.399 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 47 ms. Found 0 Redis repository interfaces.
24-08-07.20:58:51.392 [main            ] INFO  Version                - Redisson 3.26.0
24-08-07.20:58:51.562 [main            ] WARN  DnsServerAddressStreamProviders - Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'
24-08-07.20:58:52.041 [redisson-netty-1-5] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.20:58:52.100 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.20:58:55.225 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-08-07.20:58:55.349 [main            ] INFO  StrategyRepositoryTest - Started StrategyRepositoryTest in 10.989 seconds (JVM running for 15.867)
24-08-07.20:58:56.525 [redisson-netty-1-2] ERROR CommandDecoder         - Unable to decode data. channel: [id: 0x619e46bb, L:/127.0.0.1:59309 - R:127.0.0.1/127.0.0.1:6379], reply: ReplayingDecoderByteBuf(ridx=7, widx=7), command: (GET), promise: java.util.concurrent.CompletableFuture@156fc9ef[Not completed, 1 dependents], params: [strategy_award_count_key_300001_102]
com.esotericsoftware.kryo.KryoException: Encountered unregistered class ID: 55
	at com.esotericsoftware.kryo.util.DefaultClassResolver.readClass(DefaultClassResolver.java:159)
	at com.esotericsoftware.kryo.Kryo.readClass(Kryo.java:758)
	at com.esotericsoftware.kryo.Kryo.readClassAndObject(Kryo.java:869)
	at org.redisson.codec.Kryo5Codec$4.decode(Kryo5Codec.java:144)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:433)
	at org.redisson.client.handler.CommandDecoder.decodeCommand(CommandDecoder.java:216)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:144)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:120)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:529)
	at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:366)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)
24-08-07.20:58:56.545 [redisson-netty-1-2] ERROR ErrorsLoggingHandler   - Exception occured. Channel: [id: 0x619e46bb, L:/127.0.0.1:59309 - R:127.0.0.1/127.0.0.1:6379]
io.netty.handler.codec.DecoderException: com.esotericsoftware.kryo.KryoException: Encountered unregistered class ID: 55
	at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:421)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.esotericsoftware.kryo.KryoException: Encountered unregistered class ID: 55
	at com.esotericsoftware.kryo.util.DefaultClassResolver.readClass(DefaultClassResolver.java:159)
	at com.esotericsoftware.kryo.Kryo.readClass(Kryo.java:758)
	at com.esotericsoftware.kryo.Kryo.readClassAndObject(Kryo.java:869)
	at org.redisson.codec.Kryo5Codec$4.decode(Kryo5Codec.java:144)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:433)
	at org.redisson.client.handler.CommandDecoder.decodeCommand(CommandDecoder.java:216)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:144)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:120)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:529)
	at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:366)
	... 17 common frames omitted
24-08-07.20:59:27.341 [main            ] INFO  StrategyRepositoryTest - Starting StrategyRepositoryTest using Java 17.0.11 on 192.168.10.103 with PID 21174 (started by caicai in /Users/caicai/Documents/idea 项目/big-market02/big-market02-app)
24-08-07.20:59:27.349 [main            ] INFO  StrategyRepositoryTest - The following 1 profile is active: "dev"
24-08-07.20:59:31.010 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-08-07.20:59:31.016 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-08-07.20:59:31.124 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 60 ms. Found 0 Redis repository interfaces.
24-08-07.20:59:34.978 [main            ] INFO  Version                - Redisson 3.26.0
24-08-07.20:59:35.258 [main            ] WARN  DnsServerAddressStreamProviders - Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'
24-08-07.20:59:35.865 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.20:59:35.960 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.20:59:40.215 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-08-07.20:59:40.391 [main            ] INFO  StrategyRepositoryTest - Started StrategyRepositoryTest in 15.009 seconds (JVM running for 19.743)
24-08-07.20:59:45.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:59:50.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.20:59:50.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100001 awardId:102
24-08-07.20:59:50.057 [scheduling-1    ] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-08-07.20:59:50.678 [scheduling-1    ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-08-07.20:59:55.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.21:00:00.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.21:00:05.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.21:00:07.872 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-08-07.21:00:07.887 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-08-07.22:05:35.996 [main            ] INFO  StrategyTest           - Starting StrategyTest using Java 17.0.11 on 192.168.10.103 with PID 22172 (started by caicai in /Users/caicai/Documents/idea 项目/big-market02/big-market02-app)
24-08-07.22:05:35.998 [main            ] INFO  StrategyTest           - The following 1 profile is active: "dev"
24-08-07.22:05:38.113 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-08-07.22:05:38.120 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-08-07.22:05:38.189 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 36 ms. Found 0 Redis repository interfaces.
24-08-07.22:05:41.695 [main            ] INFO  Version                - Redisson 3.26.0
24-08-07.22:05:41.912 [main            ] WARN  DnsServerAddressStreamProviders - Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'
24-08-07.22:05:42.566 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.22:05:42.713 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.22:05:47.583 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-08-07.22:05:47.760 [main            ] INFO  StrategyTest           - Started StrategyTest in 12.796 seconds (JVM running for 16.64)
24-08-07.22:05:49.011 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-08-07.22:05:49.933 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-08-07.22:05:50.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:05:50.322 [main            ] INFO  StrategyTest           - 测试结果：true
24-08-07.22:05:50.332 [main            ] INFO  StrategyTest           - 测试结果：104 - 4000 策略配置
24-08-07.22:05:50.432 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-08-07.22:05:50.454 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-08-07.22:10:06.220 [main            ] INFO  RaffleStrategyTest     - Starting RaffleStrategyTest using Java 17.0.11 on 192.168.10.103 with PID 22215 (started by caicai in /Users/caicai/Documents/idea 项目/big-market02/big-market02-app)
24-08-07.22:10:06.224 [main            ] INFO  RaffleStrategyTest     - The following 1 profile is active: "dev"
24-08-07.22:10:10.892 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-08-07.22:10:10.899 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-08-07.22:10:10.984 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 47 ms. Found 0 Redis repository interfaces.
24-08-07.22:10:13.765 [main            ] INFO  Version                - Redisson 3.26.0
24-08-07.22:10:13.941 [main            ] WARN  DnsServerAddressStreamProviders - Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'
24-08-07.22:10:14.473 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.22:10:14.515 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.22:10:18.169 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-08-07.22:10:18.299 [main            ] INFO  RaffleStrategyTest     - Started RaffleStrategyTest in 14.416 seconds (JVM running for 21.55)
24-08-07.22:10:19.611 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-08-07.22:10:20.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:10:20.735 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-08-07.22:10:21.646 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-08-07.22:10:21.699 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-08-07.22:10:21.714 [main            ] INFO  BackListLogicChain     - 抽奖责任链-黑名单开始 userId: xiaofuge strategyId: 100001 ruleModel: rule_blacklist
24-08-07.22:10:21.780 [main            ] INFO  BackListLogicChain     - 抽奖责任链-黑名单放行 userId: xiaofuge strategyId: 100001 ruleModel: rule_blacklist
24-08-07.22:10:21.781 [main            ] INFO  RuleWeightLogicChain   - 抽奖责任链-权重开始 userId: xiaofuge strategyId: 100001 ruleModel: rule_weight
24-08-07.22:10:21.792 [main            ] INFO  RuleWeightLogicChain   - 抽奖责任链-权重接管 userId: xiaofuge strategyId: 100001 ruleModel: rule_weight awardId: 102
24-08-07.22:10:21.795 [main            ] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xiaofuge 100001 102 rule_weight
24-08-07.22:10:22.172 [main            ] INFO  RaffleStrategyTest     - 请求参数：{"strategyId":100001,"userId":"xiaofuge"}
24-08-07.22:10:22.182 [main            ] INFO  RaffleStrategyTest     - 测试结果：{"awardId":102}
24-08-07.22:10:22.274 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-08-07.22:10:22.297 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-08-07.22:11:05.682 [main            ] INFO  RaffleStrategyTest     - Starting RaffleStrategyTest using Java 17.0.11 on 192.168.10.103 with PID 22227 (started by caicai in /Users/caicai/Documents/idea 项目/big-market02/big-market02-app)
24-08-07.22:11:05.684 [main            ] INFO  RaffleStrategyTest     - The following 1 profile is active: "dev"
24-08-07.22:11:08.674 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-08-07.22:11:08.682 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-08-07.22:11:08.794 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 60 ms. Found 0 Redis repository interfaces.
24-08-07.22:11:12.297 [main            ] INFO  Version                - Redisson 3.26.0
24-08-07.22:11:12.531 [main            ] WARN  DnsServerAddressStreamProviders - Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'
24-08-07.22:11:13.177 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.22:11:13.248 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.22:11:17.689 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-08-07.22:11:17.866 [main            ] INFO  RaffleStrategyTest     - Started RaffleStrategyTest in 13.819 seconds (JVM running for 19.544)
24-08-07.22:11:20.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:11:20.118 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-08-07.22:11:20.991 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-08-07.22:11:21.139 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-08-07.22:11:21.220 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-08-07.22:11:21.244 [main            ] INFO  BackListLogicChain     - 抽奖责任链-黑名单开始 userId: user003 strategyId: 100001 ruleModel: rule_blacklist
24-08-07.22:11:21.313 [main            ] INFO  BackListLogicChain     - 抽奖责任链-黑名单接管 userId: user003 strategyId: 100001 ruleModel: rule_blacklist awardId: 101
24-08-07.22:11:21.315 [main            ] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 user003 100001 101 rule_blacklist
24-08-07.22:11:21.892 [main            ] INFO  RaffleStrategyTest     - 请求参数：{"strategyId":100001,"userId":"user003"}
24-08-07.22:11:21.900 [main            ] INFO  RaffleStrategyTest     - 测试结果：{"awardId":101}
24-08-07.22:11:22.288 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-08-07.22:11:22.318 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-08-07.22:11:22.320 [main            ] INFO  BackListLogicChain     - 抽奖责任链-黑名单开始 userId: xiaofuge strategyId: 100001 ruleModel: rule_blacklist
24-08-07.22:11:22.323 [main            ] INFO  BackListLogicChain     - 抽奖责任链-黑名单放行 userId: xiaofuge strategyId: 100001 ruleModel: rule_blacklist
24-08-07.22:11:22.324 [main            ] INFO  RuleWeightLogicChain   - 抽奖责任链-权重开始 userId: xiaofuge strategyId: 100001 ruleModel: rule_weight
24-08-07.22:11:22.331 [main            ] INFO  RuleWeightLogicChain   - 抽奖责任链-权重接管 userId: xiaofuge strategyId: 100001 ruleModel: rule_weight awardId: 105
24-08-07.22:11:22.332 [main            ] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xiaofuge 100001 105 rule_weight
24-08-07.22:11:22.332 [main            ] INFO  RaffleStrategyTest     - 请求参数：{"strategyId":100001,"userId":"xiaofuge"}
24-08-07.22:11:22.332 [main            ] INFO  RaffleStrategyTest     - 测试结果：{"awardId":105}
24-08-07.22:11:22.638 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-08-07.22:11:22.693 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-08-07.22:11:22.697 [main            ] INFO  RaffleStrategyTest     - 测试结果：null
24-08-07.22:11:22.947 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-08-07.22:11:22.975 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-08-07.22:11:22.977 [main            ] INFO  BackListLogicChain     - 抽奖责任链-黑名单开始 userId: xiaofuge strategyId: 100006 ruleModel: rule_blacklist
24-08-07.22:11:22.982 [main            ] INFO  BackListLogicChain     - 抽奖责任链-黑名单放行 userId: xiaofuge strategyId: 100006 ruleModel: rule_blacklist
24-08-07.22:11:22.982 [main            ] INFO  RuleWeightLogicChain   - 抽奖责任链-权重开始 userId: xiaofuge strategyId: 100006 ruleModel: rule_weight
24-08-07.22:11:22.988 [main            ] INFO  RuleWeightLogicChain   - 抽奖责任链-权重接管 userId: xiaofuge strategyId: 100006 ruleModel: rule_weight awardId: 105
24-08-07.22:11:22.988 [main            ] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xiaofuge 100006 105 rule_weight
24-08-07.22:11:22.989 [main            ] INFO  RaffleStrategyTest     - 请求参数：{"strategyId":100006,"userId":"xiaofuge"}
24-08-07.22:11:22.989 [main            ] INFO  RaffleStrategyTest     - 测试结果：{"awardId":105}
24-08-07.22:11:22.990 [main            ] INFO  BackListLogicChain     - 抽奖责任链-黑名单开始 userId: xiaofuge strategyId: 100006 ruleModel: rule_blacklist
24-08-07.22:11:22.994 [main            ] INFO  BackListLogicChain     - 抽奖责任链-黑名单放行 userId: xiaofuge strategyId: 100006 ruleModel: rule_blacklist
24-08-07.22:11:22.994 [main            ] INFO  RuleWeightLogicChain   - 抽奖责任链-权重开始 userId: xiaofuge strategyId: 100006 ruleModel: rule_weight
24-08-07.22:11:23.000 [main            ] INFO  RuleWeightLogicChain   - 抽奖责任链-权重接管 userId: xiaofuge strategyId: 100006 ruleModel: rule_weight awardId: 104
24-08-07.22:11:23.000 [main            ] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xiaofuge 100006 104 rule_weight
24-08-07.22:11:23.000 [main            ] INFO  RaffleStrategyTest     - 请求参数：{"strategyId":100006,"userId":"xiaofuge"}
24-08-07.22:11:23.001 [main            ] INFO  RaffleStrategyTest     - 测试结果：{"awardId":104}
24-08-07.22:11:23.002 [main            ] INFO  BackListLogicChain     - 抽奖责任链-黑名单开始 userId: xiaofuge strategyId: 100006 ruleModel: rule_blacklist
24-08-07.22:11:23.009 [main            ] INFO  BackListLogicChain     - 抽奖责任链-黑名单放行 userId: xiaofuge strategyId: 100006 ruleModel: rule_blacklist
24-08-07.22:11:23.009 [main            ] INFO  RuleWeightLogicChain   - 抽奖责任链-权重开始 userId: xiaofuge strategyId: 100006 ruleModel: rule_weight
24-08-07.22:11:23.015 [main            ] INFO  RuleWeightLogicChain   - 抽奖责任链-权重接管 userId: xiaofuge strategyId: 100006 ruleModel: rule_weight awardId: 105
24-08-07.22:11:23.016 [main            ] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xiaofuge 100006 105 rule_weight
24-08-07.22:11:23.016 [main            ] INFO  RaffleStrategyTest     - 请求参数：{"strategyId":100006,"userId":"xiaofuge"}
24-08-07.22:11:23.016 [main            ] INFO  RaffleStrategyTest     - 测试结果：{"awardId":105}
24-08-07.22:11:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:11:30.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:11:35.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:11:40.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:11:45.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:11:50.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:11:55.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:12:00.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:12:05.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:12:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:12:15.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:12:20.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:12:25.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:12:30.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:12:35.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:12:40.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:12:41.671 [main            ] INFO  StrategyRepositoryTest - Starting StrategyRepositoryTest using Java 17.0.11 on 192.168.10.103 with PID 22242 (started by caicai in /Users/caicai/Documents/idea 项目/big-market02/big-market02-app)
24-08-07.22:12:41.675 [main            ] INFO  StrategyRepositoryTest - The following 1 profile is active: "dev"
24-08-07.22:12:45.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:12:46.183 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-08-07.22:12:46.191 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-08-07.22:12:46.331 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 83 ms. Found 0 Redis repository interfaces.
24-08-07.22:12:49.580 [main            ] INFO  Version                - Redisson 3.26.0
24-08-07.22:12:49.747 [main            ] WARN  DnsServerAddressStreamProviders - Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'
24-08-07.22:12:50.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:12:50.407 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.22:12:50.459 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.22:12:54.153 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-08-07.22:12:54.304 [main            ] INFO  StrategyRepositoryTest - Started StrategyRepositoryTest in 14.186 seconds (JVM running for 19.5)
24-08-07.22:12:55.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:12:55.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:12:55.846 [redisson-netty-1-10] ERROR CommandDecoder         - Unable to decode data. channel: [id: 0x47ed6d34, L:/127.0.0.1:59751 - R:127.0.0.1/127.0.0.1:6379], reply: ReplayingDecoderByteBuf(ridx=8, widx=8), command: (GET), promise: java.util.concurrent.CompletableFuture@fd251e2[Not completed, 1 dependents], params: [strategy_award_count_key_300001_102]
com.esotericsoftware.kryo.KryoException: Encountered unregistered class ID: 47
	at com.esotericsoftware.kryo.util.DefaultClassResolver.readClass(DefaultClassResolver.java:159)
	at com.esotericsoftware.kryo.Kryo.readClass(Kryo.java:758)
	at com.esotericsoftware.kryo.Kryo.readClassAndObject(Kryo.java:869)
	at org.redisson.codec.Kryo5Codec$4.decode(Kryo5Codec.java:144)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:433)
	at org.redisson.client.handler.CommandDecoder.decodeCommand(CommandDecoder.java:216)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:144)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:120)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:529)
	at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:366)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)
24-08-07.22:12:55.868 [redisson-netty-1-10] ERROR ErrorsLoggingHandler   - Exception occured. Channel: [id: 0x47ed6d34, L:/127.0.0.1:59751 - R:127.0.0.1/127.0.0.1:6379]
io.netty.handler.codec.DecoderException: com.esotericsoftware.kryo.KryoException: Encountered unregistered class ID: 47
	at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:421)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.esotericsoftware.kryo.KryoException: Encountered unregistered class ID: 47
	at com.esotericsoftware.kryo.util.DefaultClassResolver.readClass(DefaultClassResolver.java:159)
	at com.esotericsoftware.kryo.Kryo.readClass(Kryo.java:758)
	at com.esotericsoftware.kryo.Kryo.readClassAndObject(Kryo.java:869)
	at org.redisson.codec.Kryo5Codec$4.decode(Kryo5Codec.java:144)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:433)
	at org.redisson.client.handler.CommandDecoder.decodeCommand(CommandDecoder.java:216)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:144)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:120)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:529)
	at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:366)
	... 17 common frames omitted
24-08-07.22:12:56.086 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-08-07.22:12:56.889 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-08-07.22:12:57.536 [main            ] INFO  StrategyRepositoryTest - 测试结果：{"treeDesc":"规则树","treeId":"tree_lock","treeName":"规则树","treeNodeMap":{},"treeRootRuleNode":"rule_lock"}
24-08-07.22:13:00.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:13:00.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:13:05.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:13:05.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:13:05.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100001 awardId:102
24-08-07.22:13:10.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:13:10.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:13:15.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:13:15.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:13:20.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:13:20.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:13:25.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:13:25.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:13:30.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:13:30.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:13:34.285 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-08-07.22:13:34.317 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-08-07.22:13:34.585 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-08-07.22:13:34.715 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-08-07.22:17:51.503 [main            ] INFO  RaffleStrategyTest     - Starting RaffleStrategyTest using Java 17.0.11 on 192.168.10.103 with PID 22316 (started by caicai in /Users/caicai/Documents/idea 项目/big-market02/big-market02-app)
24-08-07.22:17:51.506 [main            ] INFO  RaffleStrategyTest     - The following 1 profile is active: "dev"
24-08-07.22:17:55.002 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-08-07.22:17:55.011 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-08-07.22:17:55.140 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 74 ms. Found 0 Redis repository interfaces.
24-08-07.22:17:59.153 [main            ] INFO  Version                - Redisson 3.26.0
24-08-07.22:17:59.526 [main            ] WARN  DnsServerAddressStreamProviders - Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'
24-08-07.22:18:00.165 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.22:18:00.220 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.22:18:04.592 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-08-07.22:18:04.795 [main            ] INFO  RaffleStrategyTest     - Started RaffleStrategyTest in 15.306 seconds (JVM running for 21.022)
24-08-07.22:18:05.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:18:06.282 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-08-07.22:18:07.277 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-08-07.22:18:07.959 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-08-07.22:18:08.060 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-08-07.22:18:08.080 [main            ] INFO  BackListLogicChain     - 抽奖责任链-黑名单开始 userId: user003 strategyId: 100001 ruleModel: rule_blacklist
24-08-07.22:18:08.143 [main            ] INFO  BackListLogicChain     - 抽奖责任链-黑名单接管 userId: user003 strategyId: 100001 ruleModel: rule_blacklist awardId: 101
24-08-07.22:18:08.146 [main            ] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 user003 100001 101 rule_blacklist
24-08-07.22:18:08.842 [main            ] INFO  RaffleStrategyTest     - 请求参数：{"strategyId":100001,"userId":"user003"}
24-08-07.22:18:08.858 [main            ] INFO  RaffleStrategyTest     - 测试结果：{"awardId":101}
24-08-07.22:18:08.994 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-08-07.22:18:09.076 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-08-07.22:18:09.082 [main            ] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId: xiaofuge strategyId: 100003 ruleModel: rule_default awardId: 107
24-08-07.22:18:09.083 [main            ] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xiaofuge 100003 107 rule_default
24-08-07.22:18:09.276 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-08-07.22:18:09.365 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-08-07.22:18:09.367 [main            ] INFO  RaffleStrategyTest     - 测试结果：null
24-08-07.22:18:09.455 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-08-07.22:18:09.557 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-08-07.22:18:09.560 [main            ] INFO  BackListLogicChain     - 抽奖责任链-黑名单开始 userId: xiaofuge strategyId: 100006 ruleModel: rule_blacklist
24-08-07.22:18:09.565 [main            ] INFO  BackListLogicChain     - 抽奖责任链-黑名单放行 userId: xiaofuge strategyId: 100006 ruleModel: rule_blacklist
24-08-07.22:18:09.566 [main            ] INFO  RuleWeightLogicChain   - 抽奖责任链-权重开始 userId: xiaofuge strategyId: 100006 ruleModel: rule_weight
24-08-07.22:18:09.574 [main            ] INFO  RuleWeightLogicChain   - 抽奖责任链-权重接管 userId: xiaofuge strategyId: 100006 ruleModel: rule_weight awardId: 104
24-08-07.22:18:09.574 [main            ] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xiaofuge 100006 104 rule_weight
24-08-07.22:18:09.574 [main            ] INFO  RaffleStrategyTest     - 请求参数：{"strategyId":100006,"userId":"xiaofuge"}
24-08-07.22:18:09.575 [main            ] INFO  RaffleStrategyTest     - 测试结果：{"awardId":104}
24-08-07.22:18:09.577 [main            ] INFO  BackListLogicChain     - 抽奖责任链-黑名单开始 userId: xiaofuge strategyId: 100006 ruleModel: rule_blacklist
24-08-07.22:18:09.581 [main            ] INFO  BackListLogicChain     - 抽奖责任链-黑名单放行 userId: xiaofuge strategyId: 100006 ruleModel: rule_blacklist
24-08-07.22:18:09.582 [main            ] INFO  RuleWeightLogicChain   - 抽奖责任链-权重开始 userId: xiaofuge strategyId: 100006 ruleModel: rule_weight
24-08-07.22:18:09.590 [main            ] INFO  RuleWeightLogicChain   - 抽奖责任链-权重接管 userId: xiaofuge strategyId: 100006 ruleModel: rule_weight awardId: 104
24-08-07.22:18:09.590 [main            ] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xiaofuge 100006 104 rule_weight
24-08-07.22:18:09.590 [main            ] INFO  RaffleStrategyTest     - 请求参数：{"strategyId":100006,"userId":"xiaofuge"}
24-08-07.22:18:09.591 [main            ] INFO  RaffleStrategyTest     - 测试结果：{"awardId":104}
24-08-07.22:18:09.592 [main            ] INFO  BackListLogicChain     - 抽奖责任链-黑名单开始 userId: xiaofuge strategyId: 100006 ruleModel: rule_blacklist
24-08-07.22:18:09.596 [main            ] INFO  BackListLogicChain     - 抽奖责任链-黑名单放行 userId: xiaofuge strategyId: 100006 ruleModel: rule_blacklist
24-08-07.22:18:09.596 [main            ] INFO  RuleWeightLogicChain   - 抽奖责任链-权重开始 userId: xiaofuge strategyId: 100006 ruleModel: rule_weight
24-08-07.22:18:09.603 [main            ] INFO  RuleWeightLogicChain   - 抽奖责任链-权重接管 userId: xiaofuge strategyId: 100006 ruleModel: rule_weight awardId: 104
24-08-07.22:18:09.604 [main            ] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xiaofuge 100006 104 rule_weight
24-08-07.22:18:09.605 [main            ] INFO  RaffleStrategyTest     - 请求参数：{"strategyId":100006,"userId":"xiaofuge"}
24-08-07.22:18:09.605 [main            ] INFO  RaffleStrategyTest     - 测试结果：{"awardId":104}
24-08-07.22:18:10.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:18:15.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:18:20.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:18:25.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:18:30.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:18:35.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:18:40.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:18:45.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:18:50.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:18:55.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:19:00.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:19:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:19:10.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:19:15.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:19:20.033 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:19:25.122 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-08-07.22:19:25.172 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-08-07.22:19:41.630 [main            ] INFO  RaffleStrategyTest     - Starting RaffleStrategyTest using Java 17.0.11 on 192.168.10.103 with PID 22339 (started by caicai in /Users/caicai/Documents/idea 项目/big-market02/big-market02-app)
24-08-07.22:19:41.632 [main            ] INFO  RaffleStrategyTest     - The following 1 profile is active: "dev"
24-08-07.22:19:45.059 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-08-07.22:19:45.070 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-08-07.22:19:45.168 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 57 ms. Found 0 Redis repository interfaces.
24-08-07.22:19:48.395 [main            ] INFO  Version                - Redisson 3.26.0
24-08-07.22:19:48.605 [main            ] WARN  DnsServerAddressStreamProviders - Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'
24-08-07.22:19:49.108 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.22:19:49.161 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.22:19:55.037 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-08-07.22:19:55.372 [main            ] INFO  RaffleStrategyTest     - Started RaffleStrategyTest in 15.589 seconds (JVM running for 20.63)
24-08-07.22:19:57.231 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-08-07.22:19:58.165 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-08-07.22:19:58.723 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-08-07.22:19:58.762 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-08-07.22:19:59.275 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-08-07.22:19:59.348 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-08-07.22:19:59.367 [main            ] INFO  BackListLogicChain     - 抽奖责任链-黑名单开始 userId: user003 strategyId: 100001 ruleModel: rule_blacklist
24-08-07.22:19:59.418 [main            ] INFO  BackListLogicChain     - 抽奖责任链-黑名单接管 userId: user003 strategyId: 100001 ruleModel: rule_blacklist awardId: 101
24-08-07.22:19:59.420 [main            ] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 user003 100001 101 rule_blacklist
24-08-07.22:19:59.823 [main            ] INFO  RaffleStrategyTest     - 请求参数：{"strategyId":100001,"userId":"user003"}
24-08-07.22:19:59.830 [main            ] INFO  RaffleStrategyTest     - 测试结果：{"awardId":101}
24-08-07.22:19:59.896 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-08-07.22:19:59.909 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-08-07.22:20:00.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:20:00.224 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-08-07.22:20:00.256 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-08-07.22:20:00.260 [main            ] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId: xiaofuge strategyId: 100003 ruleModel: rule_default awardId: 107
24-08-07.22:20:00.260 [main            ] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xiaofuge 100003 107 rule_default
24-08-07.22:20:00.371 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-08-07.22:20:00.381 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-08-07.22:20:00.580 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-08-07.22:20:00.637 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-08-07.22:20:00.643 [main            ] INFO  RaffleStrategyTest     - 测试结果：null
24-08-07.22:20:00.690 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-08-07.22:20:00.711 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-08-07.22:20:00.988 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-08-07.22:20:01.015 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-08-07.22:20:01.018 [main            ] INFO  BackListLogicChain     - 抽奖责任链-黑名单开始 userId: xiaofuge strategyId: 100006 ruleModel: rule_blacklist
24-08-07.22:20:01.023 [main            ] INFO  BackListLogicChain     - 抽奖责任链-黑名单放行 userId: xiaofuge strategyId: 100006 ruleModel: rule_blacklist
24-08-07.22:20:01.024 [main            ] INFO  RuleWeightLogicChain   - 抽奖责任链-权重开始 userId: xiaofuge strategyId: 100006 ruleModel: rule_weight
24-08-07.22:20:01.031 [main            ] INFO  RuleWeightLogicChain   - 抽奖责任链-权重接管 userId: xiaofuge strategyId: 100006 ruleModel: rule_weight awardId: 105
24-08-07.22:20:01.032 [main            ] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xiaofuge 100006 105 rule_weight
24-08-07.22:20:01.033 [main            ] INFO  RaffleStrategyTest     - 请求参数：{"strategyId":100006,"userId":"xiaofuge"}
24-08-07.22:20:01.033 [main            ] INFO  RaffleStrategyTest     - 测试结果：{"awardId":105}
24-08-07.22:20:01.039 [main            ] INFO  BackListLogicChain     - 抽奖责任链-黑名单开始 userId: xiaofuge strategyId: 100006 ruleModel: rule_blacklist
24-08-07.22:20:01.079 [main            ] INFO  BackListLogicChain     - 抽奖责任链-黑名单放行 userId: xiaofuge strategyId: 100006 ruleModel: rule_blacklist
24-08-07.22:20:01.080 [main            ] INFO  RuleWeightLogicChain   - 抽奖责任链-权重开始 userId: xiaofuge strategyId: 100006 ruleModel: rule_weight
24-08-07.22:20:01.103 [main            ] INFO  RuleWeightLogicChain   - 抽奖责任链-权重接管 userId: xiaofuge strategyId: 100006 ruleModel: rule_weight awardId: 104
24-08-07.22:20:01.104 [main            ] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xiaofuge 100006 104 rule_weight
24-08-07.22:20:01.104 [main            ] INFO  RaffleStrategyTest     - 请求参数：{"strategyId":100006,"userId":"xiaofuge"}
24-08-07.22:20:01.105 [main            ] INFO  RaffleStrategyTest     - 测试结果：{"awardId":104}
24-08-07.22:20:01.112 [main            ] INFO  BackListLogicChain     - 抽奖责任链-黑名单开始 userId: xiaofuge strategyId: 100006 ruleModel: rule_blacklist
24-08-07.22:20:01.120 [main            ] INFO  BackListLogicChain     - 抽奖责任链-黑名单放行 userId: xiaofuge strategyId: 100006 ruleModel: rule_blacklist
24-08-07.22:20:01.120 [main            ] INFO  RuleWeightLogicChain   - 抽奖责任链-权重开始 userId: xiaofuge strategyId: 100006 ruleModel: rule_weight
24-08-07.22:20:01.128 [main            ] INFO  RuleWeightLogicChain   - 抽奖责任链-权重接管 userId: xiaofuge strategyId: 100006 ruleModel: rule_weight awardId: 104
24-08-07.22:20:01.132 [main            ] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xiaofuge 100006 104 rule_weight
24-08-07.22:20:01.134 [main            ] INFO  RaffleStrategyTest     - 请求参数：{"strategyId":100006,"userId":"xiaofuge"}
24-08-07.22:20:01.135 [main            ] INFO  RaffleStrategyTest     - 测试结果：{"awardId":104}
24-08-07.22:20:05.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:20:10.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:20:15.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:20:20.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:20:25.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:20:30.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:20:35.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:20:35.721 [main            ] INFO  RaffleStrategyTest     - Starting RaffleStrategyTest using Java 17.0.11 on 192.168.10.103 with PID 22353 (started by caicai in /Users/caicai/Documents/idea 项目/big-market02/big-market02-app)
24-08-07.22:20:35.727 [main            ] INFO  RaffleStrategyTest     - The following 1 profile is active: "dev"
24-08-07.22:20:38.639 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-08-07.22:20:38.647 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-08-07.22:20:38.758 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 71 ms. Found 0 Redis repository interfaces.
24-08-07.22:20:40.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:20:42.348 [main            ] INFO  Version                - Redisson 3.26.0
24-08-07.22:20:42.619 [main            ] WARN  DnsServerAddressStreamProviders - Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'
24-08-07.22:20:43.442 [redisson-netty-1-6] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.22:20:43.487 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.22:20:45.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:20:48.477 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-08-07.22:20:49.062 [main            ] INFO  RaffleStrategyTest     - Started RaffleStrategyTest in 14.879 seconds (JVM running for 21.089)
24-08-07.22:20:50.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:20:50.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:20:51.639 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-08-07.22:20:51.665 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-08-07.22:20:52.414 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-08-07.22:20:54.527 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-08-07.22:20:54.924 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-08-07.22:20:54.980 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-08-07.22:20:54.998 [main            ] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId: xiaofuge strategyId: 100002 ruleModel: rule_default awardId: 101
24-08-07.22:20:55.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:20:55.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:20:55.005 [main            ] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xiaofuge 100002 101 rule_default
24-08-07.22:20:55.355 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-08-07.22:20:55.524 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-08-07.22:21:00.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:21:05.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:21:10.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:21:15.049 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:21:20.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:21:25.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:21:30.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:21:35.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:21:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:21:45.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:21:48.006 [main            ] INFO  RaffleStrategyTest     - Starting RaffleStrategyTest using Java 17.0.11 on 192.168.10.103 with PID 22374 (started by caicai in /Users/caicai/Documents/idea 项目/big-market02/big-market02-app)
24-08-07.22:21:48.011 [main            ] INFO  RaffleStrategyTest     - The following 1 profile is active: "dev"
24-08-07.22:21:50.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:21:52.087 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-08-07.22:21:52.100 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-08-07.22:21:52.241 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 87 ms. Found 0 Redis repository interfaces.
24-08-07.22:21:55.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:21:58.008 [main            ] INFO  Version                - Redisson 3.26.0
24-08-07.22:21:58.278 [main            ] WARN  DnsServerAddressStreamProviders - Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'
24-08-07.22:21:59.081 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.22:21:59.178 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.22:22:00.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:22:05.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:22:05.635 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-08-07.22:22:05.936 [main            ] INFO  RaffleStrategyTest     - Started RaffleStrategyTest in 20.7 seconds (JVM running for 28.853)
24-08-07.22:22:08.583 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-08-07.22:22:08.611 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-08-07.22:22:09.236 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-08-07.22:22:10.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:22:10.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:22:10.383 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-08-07.22:22:10.560 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-08-07.22:22:10.631 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-08-07.22:22:10.650 [main            ] INFO  BackListLogicChain     - 抽奖责任链-黑名单开始 userId: xiaofuge strategyId: 100001 ruleModel: rule_blacklist
24-08-07.22:22:10.762 [main            ] INFO  BackListLogicChain     - 抽奖责任链-黑名单放行 userId: xiaofuge strategyId: 100001 ruleModel: rule_blacklist
24-08-07.22:22:10.763 [main            ] INFO  RuleWeightLogicChain   - 抽奖责任链-权重开始 userId: xiaofuge strategyId: 100001 ruleModel: rule_weight
24-08-07.22:22:10.808 [main            ] INFO  RuleWeightLogicChain   - 抽奖责任链-权重接管 userId: xiaofuge strategyId: 100001 ruleModel: rule_weight awardId: 103
24-08-07.22:22:10.815 [main            ] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xiaofuge 100001 103 rule_weight
24-08-07.22:22:11.576 [main            ] INFO  RaffleStrategyTest     - 请求参数：{"strategyId":100001,"userId":"xiaofuge"}
24-08-07.22:22:11.596 [main            ] INFO  RaffleStrategyTest     - 测试结果：{"awardId":103}
24-08-07.22:22:11.747 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-08-07.22:22:11.784 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-08-07.22:22:15.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:22:20.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:22:25.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:22:30.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:22:35.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:22:40.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:22:45.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:22:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:22:55.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:23:00.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:23:05.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:23:10.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:23:15.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:23:20.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:23:25.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:23:27.735 [main            ] INFO  RaffleStrategyTest     - Starting RaffleStrategyTest using Java 17.0.11 on 192.168.10.103 with PID 22390 (started by caicai in /Users/caicai/Documents/idea 项目/big-market02/big-market02-app)
24-08-07.22:23:27.763 [main            ] INFO  RaffleStrategyTest     - The following 1 profile is active: "dev"
24-08-07.22:23:30.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:23:32.259 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-08-07.22:23:32.273 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-08-07.22:23:32.428 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 78 ms. Found 0 Redis repository interfaces.
24-08-07.22:23:35.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:23:37.058 [main            ] INFO  Version                - Redisson 3.26.0
24-08-07.22:23:37.315 [main            ] WARN  DnsServerAddressStreamProviders - Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'
24-08-07.22:23:38.102 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.22:23:38.178 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.22:23:40.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:23:44.098 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-08-07.22:23:44.296 [main            ] INFO  RaffleStrategyTest     - Started RaffleStrategyTest in 18.797 seconds (JVM running for 27.486)
24-08-07.22:23:45.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:23:45.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:23:46.528 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-08-07.22:23:47.635 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-08-07.22:23:47.847 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-08-07.22:23:47.873 [main            ] INFO  BackListLogicChain     - 抽奖责任链-黑名单开始 userId: xiaofuge strategyId: 100006 ruleModel: rule_blacklist
24-08-07.22:23:47.957 [main            ] INFO  BackListLogicChain     - 抽奖责任链-黑名单放行 userId: xiaofuge strategyId: 100006 ruleModel: rule_blacklist
24-08-07.22:23:47.958 [main            ] INFO  RuleWeightLogicChain   - 抽奖责任链-权重开始 userId: xiaofuge strategyId: 100006 ruleModel: rule_weight
24-08-07.22:23:47.981 [main            ] INFO  RuleWeightLogicChain   - 抽奖责任链-权重接管 userId: xiaofuge strategyId: 100006 ruleModel: rule_weight awardId: 104
24-08-07.22:23:47.986 [main            ] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xiaofuge 100006 104 rule_weight
24-08-07.22:23:48.664 [main            ] INFO  RaffleStrategyTest     - 请求参数：{"strategyId":100006,"userId":"xiaofuge"}
24-08-07.22:23:48.675 [main            ] INFO  RaffleStrategyTest     - 测试结果：{"awardId":104}
24-08-07.22:23:48.678 [main            ] INFO  BackListLogicChain     - 抽奖责任链-黑名单开始 userId: xiaofuge strategyId: 100006 ruleModel: rule_blacklist
24-08-07.22:23:48.686 [main            ] INFO  BackListLogicChain     - 抽奖责任链-黑名单放行 userId: xiaofuge strategyId: 100006 ruleModel: rule_blacklist
24-08-07.22:23:48.687 [main            ] INFO  RuleWeightLogicChain   - 抽奖责任链-权重开始 userId: xiaofuge strategyId: 100006 ruleModel: rule_weight
24-08-07.22:23:48.700 [main            ] INFO  RuleWeightLogicChain   - 抽奖责任链-权重接管 userId: xiaofuge strategyId: 100006 ruleModel: rule_weight awardId: 105
24-08-07.22:23:48.700 [main            ] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xiaofuge 100006 105 rule_weight
24-08-07.22:23:48.701 [main            ] INFO  RaffleStrategyTest     - 请求参数：{"strategyId":100006,"userId":"xiaofuge"}
24-08-07.22:23:48.701 [main            ] INFO  RaffleStrategyTest     - 测试结果：{"awardId":105}
24-08-07.22:23:48.704 [main            ] INFO  BackListLogicChain     - 抽奖责任链-黑名单开始 userId: xiaofuge strategyId: 100006 ruleModel: rule_blacklist
24-08-07.22:23:48.710 [main            ] INFO  BackListLogicChain     - 抽奖责任链-黑名单放行 userId: xiaofuge strategyId: 100006 ruleModel: rule_blacklist
24-08-07.22:23:48.710 [main            ] INFO  RuleWeightLogicChain   - 抽奖责任链-权重开始 userId: xiaofuge strategyId: 100006 ruleModel: rule_weight
24-08-07.22:23:48.721 [main            ] INFO  RuleWeightLogicChain   - 抽奖责任链-权重接管 userId: xiaofuge strategyId: 100006 ruleModel: rule_weight awardId: 105
24-08-07.22:23:48.721 [main            ] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xiaofuge 100006 105 rule_weight
24-08-07.22:23:48.722 [main            ] INFO  RaffleStrategyTest     - 请求参数：{"strategyId":100006,"userId":"xiaofuge"}
24-08-07.22:23:48.722 [main            ] INFO  RaffleStrategyTest     - 测试结果：{"awardId":105}
24-08-07.22:23:50.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:23:50.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:23:55.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:23:55.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:24:00.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:24:00.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:24:05.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:24:05.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:24:10.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:24:10.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:24:15.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:24:15.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:24:19.997 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:24:19.997 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:24:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:24:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:24:28.404 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-08-07.22:24:28.446 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-08-07.22:24:28.817 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-08-07.22:24:28.885 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-08-07.22:24:50.886 [main            ] INFO  LogicTreeTest          - Starting LogicTreeTest using Java 17.0.11 on 192.168.10.103 with PID 22410 (started by caicai in /Users/caicai/Documents/idea 项目/big-market02/big-market02-app)
24-08-07.22:24:50.900 [main            ] INFO  LogicTreeTest          - The following 1 profile is active: "dev"
24-08-07.22:24:54.184 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-08-07.22:24:54.193 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-08-07.22:24:54.293 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 51 ms. Found 0 Redis repository interfaces.
24-08-07.22:24:58.429 [main            ] INFO  Version                - Redisson 3.26.0
24-08-07.22:24:58.745 [main            ] WARN  DnsServerAddressStreamProviders - Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'
24-08-07.22:24:59.386 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.22:24:59.466 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.22:25:05.133 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-08-07.22:25:05.472 [main            ] INFO  LogicTreeTest          - Started LogicTreeTest in 16.498 seconds (JVM running for 22.154)
24-08-07.22:25:07.253 [main            ] INFO  RuleLockLogicTreeNode  - 规则过滤-次数锁 userId:xiaofuge strategyId:100001 awardId:100
24-08-07.22:25:07.259 [main            ] INFO  DecisionTreeEngine     - 决策树引擎【决策树规则；增加dall-e-3画图模型】treeId:100000001 node:rule_lock code:0000
24-08-07.22:25:07.266 [main            ] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xiaofuge strategyId:100001 awardId:100
24-08-07.22:25:07.451 [main            ] WARN  RuleStockLogicTreeNode - 规则过滤-库存扣减-告警，库存不足。userId:xiaofuge strategyId:100001 awardId:100
24-08-07.22:25:07.451 [main            ] INFO  DecisionTreeEngine     - 决策树引擎【决策树规则；增加dall-e-3画图模型】treeId:100000001 node:rule_stock code:0000
24-08-07.22:27:20.937 [main            ] INFO  LogicTreeTest          - Starting LogicTreeTest using Java 17.0.11 on 192.168.10.103 with PID 22439 (started by caicai in /Users/caicai/Documents/idea 项目/big-market02/big-market02-app)
24-08-07.22:27:20.940 [main            ] INFO  LogicTreeTest          - The following 1 profile is active: "dev"
24-08-07.22:27:24.022 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-08-07.22:27:24.029 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-08-07.22:27:24.120 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 46 ms. Found 0 Redis repository interfaces.
24-08-07.22:27:27.563 [main            ] INFO  Version                - Redisson 3.26.0
24-08-07.22:27:27.769 [main            ] WARN  DnsServerAddressStreamProviders - Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'
24-08-07.22:27:28.461 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.22:27:28.529 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.22:27:34.915 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-08-07.22:27:35.154 [main            ] INFO  LogicTreeTest          - Started LogicTreeTest in 15.721 seconds (JVM running for 21.431)
24-08-07.22:27:37.203 [main            ] INFO  RuleLockLogicTreeNode  - 规则过滤-次数锁 userId:xiaofuge strategyId:100003 awardId:100
24-08-07.22:27:37.207 [main            ] INFO  DecisionTreeEngine     - 决策树引擎【决策树规则；增加dall-e-3画图模型】treeId:100000001 node:rule_lock code:0000
24-08-07.22:27:37.213 [main            ] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xiaofuge strategyId:100003 awardId:100
24-08-07.22:27:37.625 [main            ] WARN  RuleStockLogicTreeNode - 规则过滤-库存扣减-告警，库存不足。userId:xiaofuge strategyId:100003 awardId:100
24-08-07.22:27:37.626 [main            ] INFO  DecisionTreeEngine     - 决策树引擎【决策树规则；增加dall-e-3画图模型】treeId:100000001 node:rule_stock code:0000
24-08-07.22:30:47.212 [main            ] INFO  LogicTreeTest          - Starting LogicTreeTest using Java 17.0.11 on 192.168.10.103 with PID 22499 (started by caicai in /Users/caicai/Documents/idea 项目/big-market02/big-market02-app)
24-08-07.22:30:47.215 [main            ] INFO  LogicTreeTest          - The following 1 profile is active: "dev"
24-08-07.22:30:49.482 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-08-07.22:30:49.488 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-08-07.22:30:49.568 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 38 ms. Found 0 Redis repository interfaces.
24-08-07.22:30:51.911 [main            ] INFO  Version                - Redisson 3.26.0
24-08-07.22:30:52.048 [main            ] WARN  DnsServerAddressStreamProviders - Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'
24-08-07.22:30:52.656 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.22:30:52.697 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.22:30:56.245 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-08-07.22:30:56.384 [main            ] INFO  LogicTreeTest          - Started LogicTreeTest in 10.22 seconds (JVM running for 13.71)
24-08-07.22:30:57.837 [main            ] INFO  RuleLockLogicTreeNode  - 规则过滤-次数锁 userId:xiaofuge strategyId:100001 awardId:100
24-08-07.22:30:57.840 [main            ] INFO  DecisionTreeEngine     - 决策树引擎 【决策树规则；增加dall-e-3画图模型】treeId:100000001 node:rule_lock code:0000
24-08-07.22:30:57.844 [main            ] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xiaofuge strategyId:100001 awardId:100
24-08-07.22:40:50.023 [main            ] INFO  LogicTreeTest          - Starting LogicTreeTest using Java 17.0.11 on 192.168.10.103 with PID 22606 (started by caicai in /Users/caicai/Documents/idea 项目/big-market02/big-market02-app)
24-08-07.22:40:50.025 [main            ] INFO  LogicTreeTest          - The following 1 profile is active: "dev"
24-08-07.22:40:52.331 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-08-07.22:40:52.339 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-08-07.22:40:52.449 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 58 ms. Found 0 Redis repository interfaces.
24-08-07.22:40:55.314 [main            ] INFO  Version                - Redisson 3.26.0
24-08-07.22:40:55.494 [main            ] WARN  DnsServerAddressStreamProviders - Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'
24-08-07.22:40:56.055 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.22:40:56.109 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.22:41:01.527 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-08-07.22:41:01.727 [main            ] INFO  LogicTreeTest          - Started LogicTreeTest in 13.387 seconds (JVM running for 18.041)
24-08-07.22:41:04.027 [main            ] INFO  RuleLockLogicTreeNode  - 规则过滤-次数锁 userId:xiaofuge strategyId:100001 awardId:100
24-08-07.22:41:04.031 [main            ] INFO  DecisionTreeEngine     - 决策树引擎 【决策树规则；增加dall-e-3画图模型】treeId:100000001 node:rule_lock code:0000
24-08-07.22:41:04.035 [main            ] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xiaofuge strategyId:100001 awardId:100
24-08-07.22:46:36.419 [main            ] INFO  LogicTreeTest          - Starting LogicTreeTest using Java 17.0.11 on 192.168.10.103 with PID 22688 (started by caicai in /Users/caicai/Documents/idea 项目/big-market02/big-market02-app)
24-08-07.22:46:36.525 [main            ] INFO  LogicTreeTest          - The following 1 profile is active: "dev"
24-08-07.22:46:43.823 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-08-07.22:46:43.839 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-08-07.22:46:44.029 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 115 ms. Found 0 Redis repository interfaces.
24-08-07.22:46:52.333 [main            ] INFO  Version                - Redisson 3.26.0
24-08-07.22:46:52.820 [main            ] WARN  DnsServerAddressStreamProviders - Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'
24-08-07.22:46:54.115 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.22:46:54.277 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.22:47:04.577 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-08-07.22:47:05.062 [main            ] INFO  LogicTreeTest          - Started LogicTreeTest in 32.902 seconds (JVM running for 46.612)
24-08-07.22:47:08.821 [main            ] INFO  RuleLockLogicTreeNode  - 规则过滤-次数锁 userId:xiaofuge strategyId:100001 awardId:100
24-08-07.22:47:08.826 [main            ] INFO  DecisionTreeEngine     - 决策树引擎 【决策树规则；增加dall-e-3画图模型】treeId:100000001 node:rule_lock code:0000
24-08-07.22:47:08.828 [main            ] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xiaofuge strategyId:100001 awardId:100
24-08-07.22:47:09.167 [main            ] WARN  RuleStockLogicTreeNode - 规则过滤-库存扣减-告警，库存不足。userId:xiaofuge strategyId:100001 awardId:100
24-08-07.22:47:09.169 [main            ] INFO  DecisionTreeEngine     - 决策树引擎 【决策树规则；增加dall-e-3画图模型】treeId:100000001 node:rule_stock code:0000
24-08-07.22:48:58.133 [main            ] INFO  LogicTreeTest          - Starting LogicTreeTest using Java 17.0.11 on 192.168.10.103 with PID 22714 (started by caicai in /Users/caicai/Documents/idea 项目/big-market02/big-market02-app)
24-08-07.22:48:58.141 [main            ] INFO  LogicTreeTest          - The following 1 profile is active: "dev"
24-08-07.22:49:03.279 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-08-07.22:49:03.287 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-08-07.22:49:03.381 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 52 ms. Found 0 Redis repository interfaces.
24-08-07.22:49:07.043 [main            ] INFO  Version                - Redisson 3.26.0
24-08-07.22:49:07.289 [main            ] WARN  DnsServerAddressStreamProviders - Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'
24-08-07.22:49:08.054 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.22:49:08.129 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:6379
24-08-07.22:49:12.603 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-08-07.22:49:12.902 [main            ] INFO  LogicTreeTest          - Started LogicTreeTest in 16.668 seconds (JVM running for 26.891)
24-08-07.22:49:14.412 [main            ] INFO  RuleLockLogicTreeNode  - 规则过滤-次数锁 userId:xiaofuge strategyId:100001 awardId:100
24-08-07.22:49:14.414 [main            ] INFO  DecisionTreeEngine     - 决策树引擎 【决策树规则；增加dall-e-3画图模型】treeId:100000001 node:rule_lock code:0000
24-08-07.22:49:48.242 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-07.22:50:26.742 [main            ] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xiaofuge strategyId:100001 awardId:100
24-08-07.22:50:31.448 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
